
<EditForm Model="OffenceModel" OnValidSubmit="SubmitAsync">
    <DataAnnotationsValidator />
    <MudDialog>
        <TitleContent>
            @{
                if (OffenceModel.Id == null)
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
                        Add Offence
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1" />
                        Update Offence
                    </MudText>
                }
            }
        </TitleContent>
        <DialogContent>
            <MudTextField Class="my-3" Variant="Variant.Outlined" Label="Offender Name" @bind-Value="OffenceModel.OffenderName" For="@(() => OffenceModel.OffenderName)" />
            <MudTextField Class="my-3" Variant="Variant.Outlined" Label="Plate Number" @bind-Value="OffenceModel.PlateNumber" For="@(() => OffenceModel.PlateNumber)" />
            <MudTextField Class="my-3" Variant="Variant.Outlined" Label="License Number" @bind-Value="OffenceModel.LicenseNo" For="@(() => OffenceModel.LicenseNo)" />
            <MudTextField Class="my-3" Variant="Variant.Outlined" Label="Offence Code" @bind-Value="OffenceModel.OffenceTypeCode" For="@(() => OffenceModel.OffenceTypeCode)" />
            <MudTextField Class="my-3" Variant="Variant.Outlined" Label="Traffic Officer" @bind-Value="OffenceModel.CreatedBy" For="@(() => OffenceModel.CreatedBy)" />


            @{
                // Copy select dropdown for offence code from down
            }

            <MudDatePicker Label="Report Date"
                           @bind-Date="OffenceModel.ReportDate"
                           DisableToolbar="true"
                           DateFormat="dd/MM/yyyy"
                           For="@(() => OffenceModel.ReportDate)" />


        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" OnClick="Cancel">Cancel</MudButton>
            <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Primary">Submit</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {


    private string offenceCodeValue { get; set; } = "Nothing selected";

    [Parameter]
    public NewOffenceRequest OffenceModel { get; set; } = new();

    [CascadingParameter]
    public MudDialogInstance? MudDialog { get; set; }
    List<string> offenceCodes = new List<string>();

    private void Cancel()
    {
        MudDialog?.Cancel();
    }

    async Task SubmitAsync()
    {
        await Task.Delay(0);

        offenceCodes.Add("TEMP1");
        offenceCodes.Add("TEMP2");
        Console.WriteLine("Submitted");
        //_appStateManager.IsBusy = true;
        //var response = await _walletManager.SaveAsync(WalletForm);
        //_appStateManager.IsBusy = false;
        //if (response.Succeeded)
        //{
        //    _snackbar.Add("Wallet has been sucessfully added!", Severity.Success);
        //    MudDialog.Close();
        //}
        //else
        //{
        //    response.ShowFailureMessages(_snackbar);
        //}

        //<MudSelect Class="my-2" Variant="Variant.Outlined" Label="OffenceCodeList" T="string" Strict="true"  @bind-Value="offenceCodeValue" MultiSelection="true"
        //               @bind-SelectedValues="@offenceCodes.AsEnumerable()" For="@(() => OffenceModel.OffenceTypeCode)">

        //        @foreach (var offenceCode in offenceCodes)
        //        {
        //            <MudSelectItem Value="@offenceCode">@offenceCode</MudSelectItem>
        //            //<MudSelectItem T="string" Value="@offenceCode">@offenceCode</MudSelectItem>

        //        }
        //    </MudSelect>



        //        <MudSelect T="Part" Label="Parts" MultiSelection="true" @bind-Value="partsValue" @bind-SelectedValues="partsOptions">
        //  @foreach (var part in PartService.Parts)
        //  {
        //    <MudSelectItem T="Part" Value="@part">@part.Name</MudSelectItem>
        //  }
        //</MudSelect>

        //@code {
        //  private string partsValue { get; set; } = "Nothing selected";
        //  private IEnumerable<Part> partsOptions { get; set; } = new HashSet<Part>();

    }
}
